{"version":3,"sources":["Components/Scroll/Scroll.js","Components/Card/Card.js","Components/Card/Cardlist.js","Components/MsgCard/Mcard.js","Components/MsgCard/Mcardlist.js","Components/Contacts/Contacts.js","Components/Register/Register.js","Components/Signin/Signin.js","App.js","serviceWorker.js","index.js"],"names":["Scroll","props","react_default","a","createElement","className","style","overflowY","border","height","children","Card","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","fillChat","loadChattingUser","state","name","imageURL","email","msgDatabase","onClick","alt","src","type","React","Component","Cardlist","cardComponent","friendlist","map","user","i","Components_Card_Card","key","id","imageurl","msgdata","Mcard","msg","Mcardlist","msges","MsgCard_Mcard","Contacts","loadingData","setState","msgingChat","console","log","friend","database","fetch","method","headers","Content-Type","body","JSON","stringify","then","response","json","data","length","onInputChange","event","target","value","updateMsgingChat","alert","forceUpdate","friendslist","status","onRouteChange","placeholder","Components_Scroll_Scroll","Card_Cardlist","fontFamily","title","MsgCard_Mcardlist","onChange","Register","onNameChange","onEmailChange","onPasswordChange","password","onSubmitSignIn","backgroundImage","htmlFor","Signin","signInEmail","signInPassword","result","friends","loadUser","initialState","route","joined","App","Components_Signin_Signin","Components_Register_Register","Components_Contacts_Contacts","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"yNAUeA,SARA,SAACC,GACf,OACCC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAmBC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAoBC,OAAQ,UAClGR,EAAMS,YCwCKC,cAzCd,SAAAA,EAAYV,GAAM,IAAAW,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACjBC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMd,KASPkB,SAAW,WAOVP,EAAKX,MAAMmB,iBAAiBR,EAAKS,QAfjCT,EAAKS,MAAQ,CACZC,KAAMV,EAAKX,MAAMqB,KACjBC,SAAUX,EAAKX,MAAMsB,SACrBC,MAAOZ,EAAKX,MAAMuB,MAClBC,YAAab,EAAKX,MAAMwB,aANRb,wEAqBlB,OACCV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4DAA4DqB,QAAUX,KAAKI,UACrFjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,OAAKuB,IAAI,UAAUC,IAAKb,KAAKd,MAAMsB,SAAUlB,UAAU,gDAEzDH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mCAAmCU,KAAKd,MAAMqB,MAC5DpB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAA2BU,KAAKd,MAAMuB,QAEtDtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,YACdH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,mEAAmEwB,KAAK,UAA1F,sBAlCQC,IAAMC,WCoBVC,cAjBd,SAAAA,EAAY/B,GAAM,IAAAW,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiB,IACjBpB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmB,GAAAd,KAAAH,KAAMd,KAGPgC,cAAgBrB,EAAKX,MAAMiC,WAAWC,IAAI,SAACC,EAAMC,GAChD,OAAOnC,EAAAC,EAAAC,cAACkC,EAAD,CAAMC,IAAKF,EAAGG,GAAI5B,EAAKX,MAAMiC,WAAWG,GAAGG,GAAIlB,KAAQV,EAAKX,MAAMiC,WAAWG,GAAGf,KAAMC,SAAUX,EAAKX,MAAMiC,WAAWG,GAAGI,SAAUjB,MAAOZ,EAAKX,MAAMiC,WAAWG,GAAGb,MAAOC,YAAcb,EAAKX,MAAMiC,WAAWG,GAAGK,QAAUtB,iBAAmBR,EAAKX,MAAMmB,qBAL/OR,wEASlB,OACCV,EAAAC,EAAAC,cAAA,WACIW,KAAKkB,sBAbYH,IAAMC,WCuBdY,cAtBd,SAAAA,EAAY1C,GAAO,OAAAY,OAAAC,EAAA,EAAAD,CAAAE,KAAA4B,GAAA9B,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8B,GAAAzB,KAAAH,KACZd,0EAIP,OACCC,EAAAC,EAAAC,cAAA,WACsB,SAApBW,KAAKd,MAAMqB,KACbpB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uDACXU,KAAKd,MAAM2C,KAEb1C,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uDACXU,KAAKd,MAAM2C,aAdKd,IAAMC,WCoBXc,cAjBd,SAAAA,EAAY5C,GAAM,IAAAW,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8B,IACjBjC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgC,GAAA3B,KAAAH,KAAMd,KAGPgC,cAAgBrB,EAAKX,MAAM6C,MAAMX,IAAI,SAACC,EAAMC,GAC3C,OAAOnC,EAAAC,EAAAC,cAAC2C,EAAD,CAAOR,IAAKF,EAAGG,GAAI5B,EAAKX,MAAM6C,MAAMT,GAAGG,GAAIlB,KAAQV,EAAKX,MAAM6C,MAAMT,GAAGf,KAAMsB,IAAKhC,EAAKX,MAAM6C,MAAMT,GAAGO,QAL5FhC,wEASlB,OACCV,EAAAC,EAAAC,cAAA,WACIW,KAAKkB,sBAbaH,IAAMC,WCgKfiB,cA3Jd,SAAAA,EAAY/C,GAAM,IAAAW,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiC,IACjBpC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmC,GAAA9B,KAAAH,KAAMd,KAiBPmB,iBAAmB,SAAC6B,GAEnBrC,EAAKsC,SAAS,CAAEC,WAAc,IAAM,WAAOC,QAAQC,IAAI,iBAEvDzC,EAAKsC,SAAS,CAACI,OAAQ,CACjBhC,KAAQ2B,EAAY3B,KACpBC,SAAY0B,EAAY1B,SACxBC,MAAQyB,EAAYzB,MACpBC,YAAewB,EAAYxB,cAC3B,WAAO2B,QAAQC,IAAI,iBAEzB,IAAIE,EAASN,EAAYxB,YAEzB+B,MAAM,8BAA8B,CACnCC,OAAQ,OACRC,QAAS,CAACC,eAAe,oBACzBC,KAAKC,KAAKC,UAAU,CACnBP,SAAWA,MAGXQ,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GACc,IAAhBA,EAAKC,QACPvD,EAAKsC,SAAS,CACbC,WAAWe,GACT,WAAOd,QAAQC,IAAI,oBA3CRzC,EAgDlBwD,cAAgB,SAACC,GACdzD,EAAKsC,SAAS,CAAEN,IAAIyB,EAAMC,OAAOC,SAjDlB3D,EAoDlB4D,iBAAmB,WAElBhB,MAAM,iCAAiC,CACtCC,OAAQ,OACRC,QAAS,CAACC,eAAe,oBACzBC,KAAKC,KAAKC,UAAU,CACnBP,SAAW3C,EAAKS,MAAMI,YACtBH,KAAMV,EAAKS,MAAMC,KACjBsB,IAAKhC,EAAKS,MAAMuB,QAGhBmB,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GACc,IAAhBA,EAAKC,QACPvD,EAAKsC,SAAS,CACbC,WAAWe,GAAO,WAChBO,MAAM,kBACNrB,QAAQC,IAAIzC,EAAKS,MAAM8B,WAAWvC,EAAKS,MAAM8B,WAAWgB,OAAO,IAC/DvD,EAAK8D,kBAIVD,MAAM,kCAxEP7D,EAAKS,MAAQ,CACZC,KAAMV,EAAKX,MAAMiE,KAAK9B,KAAKd,KAC3BC,SAAU,wCACVoD,YAAa/D,EAAKX,MAAMiE,KAAKS,YAC7BrB,OAAQ,CACPhC,KAAM,GACNC,SAAU,GACVqD,OAAQ,GACRnD,YAAa,IAEd0B,WAAY,GACZP,IAAI,IAbYhC,wEAgFjB6D,MAAM,aADC,IAECI,EAAkB9D,KAAKd,MAAvB4E,cACT,OAEC3E,EAAAC,EAAAC,cAAA,OAAMC,UAAU,kBAGfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6DACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oDACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACbH,EAAAC,EAAAC,cAAA,OAAKwB,IAAKb,KAAKM,MAAME,SAAUlB,UAAU,yBAAyBsB,IAAI,cACtEzB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,wCAAyCU,KAAKM,MAAMC,MACjEpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4CAAf,IACCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAf,YACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAf,eACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAf,eACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAf,aACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAf,WACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiBqB,QAAS,kBAAMmD,EAAc,YAA7D,iBAMT3E,EAAAC,EAAAC,cAAA,SAAOoC,GAAG,OAAOnC,UAAU,4DAA4DwB,KAAK,OAAOiD,YAAY,WAE5G5E,EAAAC,EAAAC,cAAC2E,EAAD,KACC7E,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAC4E,EAAD,CAAU9C,WAAanB,KAAKM,MAAMsD,YAAcvD,iBAAmBL,KAAKK,sBAM9ElB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uDACoB,IAAjCU,KAAKM,MAAM8B,WAAWgB,OACvBjE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACdH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,IAAd,wEACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,8BAA8BC,MAAO,CAAE2E,WAAY,eAAjE,uBAAsGlE,KAAKM,MAAMC,MACjHpB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,IAAd,yEAEDH,EAAAC,EAAAC,cAAA,WAEQF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0DACpBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACbH,EAAAC,EAAAC,cAAA,OAAKwB,IAAMb,KAAKM,MAAMiC,OAAO/B,SAAWlB,UAAU,yBAAyBsB,IAAI,cAC/EzB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qCAAuCU,KAAKM,MAAMiC,OAAOhC,OAExEpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6CAA6C6E,MAAM,SAAlE,YACAhF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6CAA6C6E,MAAM,SAAlE,QACAhF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCAAkC6E,MAAM,WAAvD,aAIJhF,EAAAC,EAAAC,cAAC2E,EAAD,CAAQ1E,UAAU,oBACjBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0DAA0DC,MAAO,CAACG,OAAQ,QAASwE,WAAY,eAC7G/E,EAAAC,EAAAC,cAAC+E,EAAD,CAAWrC,MAAQ/B,KAAKM,MAAM8B,WAAaqB,iBAAqBzD,KAAKyD,qBAIvEtE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+CACdH,EAAAC,EAAAC,cAAA,SAAO0E,YAAY,iBAAiBjD,KAAK,OAAOuD,SAAWrE,KAAKqD,cAAgB/D,UAAU,iEACrFH,EAAAC,EAAAC,cAAA,SAAOyB,KAAK,SAAS0C,MAAM,OAAO7C,QAAUX,KAAKyD,iBAAmBnE,UAAU,uGAlJlEyB,IAAMC,WCwEdsD,cA1Ed,SAAAA,EAAYpF,GAAM,IAAAW,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsE,IACjBzE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwE,GAAAnE,KAAAH,KAAMd,KAQPqF,aAAe,SAACjB,GACfzD,EAAKsC,SAAS,CAAE5B,KAAM+C,EAAMC,OAAOC,SAVlB3D,EAalB2E,cAAgB,SAAClB,GAChBzD,EAAKsC,SAAS,CAAE1B,MAAO6C,EAAMC,OAAOC,SAdnB3D,EAiBlB4E,iBAAmB,SAACnB,GACnBzD,EAAKsC,SAAS,CAAEuC,SAAUpB,EAAMC,OAAOC,SAlBtB3D,EAqBlB8E,eAAiB,WAChBlC,MAAM,iCAAiC,CACtCC,OAAQ,OACRC,QAAS,CAACC,eAAe,oBACzBC,KAAKC,KAAKC,UAAU,CACnBxC,KAAMV,EAAKS,MAAMC,KACjBE,MAAOZ,EAAKS,MAAMG,MAClBiE,SAAU7E,EAAKS,MAAMoE,aAItB7E,EAAKX,MAAM4E,cAAc,SA9B1BjE,EAAKS,MAAQ,CACZG,MAAO,GACPiE,SAAU,GACVnE,KAAM,IALUV,wEAmCV,IACCiE,EAAkB9D,KAAKd,MAAvB4E,cACT,OACE3E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8DAA8DC,MAAO,CAACqF,gBAAe,uDAC/FzF,EAAAC,EAAAC,cAAA,OAAKoC,GAAG,UAAUnC,UAAU,iDAE5BH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,6BAAd,YACAH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,SAAOwF,QAAQ,WAAWvF,UAAU,8BAApC,YACAH,EAAAC,EAAAC,cAAA,SAAOyB,KAAK,OAAOP,KAAK,WAAW8D,SAAWrE,KAAKuE,aAAejF,UAAU,+GAE9EH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,SAAOwF,QAAQ,WAAWvF,UAAU,8BAApC,UACAH,EAAAC,EAAAC,cAAA,SAAOyB,KAAK,QAAQP,KAAK,QAAQ8D,SAAWrE,KAAKwE,cAAgBlF,UAAU,+GAE7EH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,SAAOwF,QAAQ,WAAWvF,UAAU,8BAApC,YACAH,EAAAC,EAAAC,cAAA,SAAOyB,KAAK,WAAWP,KAAK,WAAW8D,SAAWrE,KAAKyE,iBAAmBnF,UAAU,+GAEtFH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,yGAChBwB,KAAK,SACX0C,MAAM,WACN7C,QAAUX,KAAK2E,mBAIdxF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BAAf,wBACwBH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAiBqB,QAAS,kBAAMmD,EAAc,YAA3D,qBAnEX/C,IAAMC,WCkFd8D,cAhFd,SAAAA,EAAY5F,GAAM,IAAAW,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8E,IACjBjF,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgF,GAAA3E,KAAAH,KAAMd,KAOPsF,cAAgB,SAAClB,GAChBzD,EAAKsC,SAAS,CAAE4C,YAAazB,EAAMC,OAAOC,SATzB3D,EAYlB4E,iBAAmB,SAACnB,GACnBzD,EAAKsC,SAAS,CAAE6C,eAAgB1B,EAAMC,OAAOC,SAb5B3D,EAgBlB8E,eAAiB,WAChBlC,MAAM,+BAA+B,CACpCC,OAAQ,OACRC,QAAS,CAACC,eAAe,oBACzBC,KAAKC,KAAKC,UAAU,CACnBtC,MAAOZ,EAAKS,MAAMyE,YAClBL,SAAU7E,EAAKS,MAAM0E,mBAGrBhC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GACFA,EAAK1B,IAEPgB,MAAM,iCAAiC,CACtCC,OAAQ,OACRC,QAAS,CAACC,eAAe,sBAExBI,KAAK,SAAAiC,GAAM,OAAIA,EAAO/B,SACtBF,KAAK,SAAAkC,GACiB,IAAnBA,EAAQ9B,SACVvD,EAAKX,MAAMiG,SAAShC,EAAM+B,GAC1BrF,EAAKX,MAAM4E,cAAc,cAnC/BjE,EAAKS,MAAQ,CACZyE,YAAa,GACbC,eAAgB,IAJAnF,wEA6CV,IACCiE,EAAkB9D,KAAKd,MAAvB4E,cACT,OACE3E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8DAA8DC,MAAO,CAACqF,gBAAe,uDAC/FzF,EAAAC,EAAAC,cAAA,OAAKoC,GAAG,UAAUnC,UAAU,iDAE5BH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,6BAAd,WACAH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,SAAOwF,QAAQ,WAAWvF,UAAU,8BAApC,SACAH,EAAAC,EAAAC,cAAA,SAAOyB,KAAK,QAAQP,KAAK,WAAW8D,SAAWrE,KAAKwE,cAAgBlF,UAAU,+GAEhFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,SAAOwF,QAAQ,WAAWvF,UAAU,8BAApC,YACAH,EAAAC,EAAAC,cAAA,SAAOyB,KAAK,WAAWP,KAAK,WAAW8D,SAAWrE,KAAKyE,iBAAmBnF,UAAU,+GAEtFH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,yGACjBkE,MAAM,UACN7C,QAAUX,KAAK2E,eACf7D,KAAK,aAIT3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BAAf,eACcH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAgBqB,QAAS,kBAAMmD,EAAc,cAA1D,2BAzEH/C,IAAMC,WCKrBoE,EAAe,CACfC,MAAO,SACPhE,KAAM,CACJI,GAAM,GACNlB,KAAO,GACPE,MAAQ,GACRiE,SAAW,GACXY,OAAU,IAEZ1B,YAAa,IA+CJ2B,cAzCb,SAAAA,IAAa,IAAA1F,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuF,IACX1F,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyF,GAAApF,KAAAH,QAIDmF,SAAW,SAAChC,EAAM+B,GAEjBrF,EAAKsC,SAAS,CACZd,KAAM,CACJI,GAAM0B,EAAK1B,GACXlB,KAAO4C,EAAK5C,KACZE,MAAQ0C,EAAK1C,MACbiE,SAAYvB,EAAKuB,SACjBY,OAAUnC,EAAKmC,QAEjB1B,YAAasB,KAfJrF,EAmBbiE,cAAgB,SAACuB,GACF,YAAVA,GACDxF,EAAKsC,SAASiD,GAEhBvF,EAAKsC,SAAS,CAACkD,MAAOA,KArBtBxF,EAAKS,MAAQ8E,EAFFvF,wEA2Bb,OACEV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACW,WAArBU,KAAKM,MAAM+E,MACVlG,EAAAC,EAAAC,cAACmG,EAAD,CAAQL,SAAanF,KAAKmF,SAAWrB,cAAkB9D,KAAK8D,gBACrC,aAArB9D,KAAKM,MAAM+E,MACXlG,EAAAC,EAAAC,cAACoG,EAAD,CAAUN,SAAanF,KAAKmF,SAAWrB,cAAkB9D,KAAK8D,gBAC9D3E,EAAAC,EAAAC,cAACqG,EAAD,CAAUvC,KAASnD,KAAKM,MAAQwD,cAAkB9D,KAAK8D,wBAnCjD9C,aCRE2E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,iECXNC,IAASC,OAAO9G,EAAAC,EAAAC,cAAC6G,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvD,KAAK,SAAAwD,GACjCA,EAAaC","file":"static/js/main.0c00e1cf.chunk.js","sourcesContent":["import React from 'react';\n\nconst Scroll = (props) => {\n\treturn (\n\t\t<div className=\"bg-washed-yellow\" style={{ overflowY: 'scroll', border: '1px solid black' , height: '750px'}}>\n\t\t\t{props.children}\n\t\t</div>\n\t);\n}\n\nexport default Scroll;","import React from 'react';\n\nclass Card extends React.Component {\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tname: this.props.name,\n\t\t\timageURL: this.props.imageURL,\n\t\t\temail: this.props.email,\n\t\t\tmsgDatabase: this.props.msgDatabase\n\t\t}\n\t}\n\n\tfillChat = () => {\n\t\t// this.setState({\n\t\t// \t'name': this.props.name, \n\t\t// \t'email': this.props.email,\n\t\t// \t'imageURL': this.props.imageURL,\n\t\t// \t'msgDatabase': this.props.msgDatabase\n\t\t// })\n\t\tthis.props.loadChattingUser(this.state);\n\t}\n\nrender(){\n\treturn (\n\t\t<div className=\"dt w-100 bb b--black-05 pb2 mt2 pa2 bg-near-white pointer\" onClick={ this.fillChat }>\n\t      <div className=\"dtc w2 w3-ns v-mid\">\n\t        <img alt=\"Profile\" src={this.props.imageURL} className=\"ba b--black-10 db br-100 w2 w3-ns h2 h3-ns\"/>\n\t      </div>\n\t      <div className=\"dtc v-mid pl3\">\n\t        <h1 className=\"f6 f5-ns fw6 lh-title black mv0\">{this.props.name}</h1>\n\t        <h2 className=\"f6 fw4 mt0 mb0 black-60\">{this.props.email}</h2>\n\t      </div>\n\t      <div className=\"dtc v-mid\">\n\t        <form className=\"w-100 tr\">\n\t          <button className=\"f6 button-reset bg-white ba b--black-10 dim pointer pv1 black-60\" type=\"submit\">+ Follow</button>\n\t        </form>\n\t      </div>\n\t    </div>\n\t\t);\n\t}\n}\n\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nclass Cardlist extends React.Component {\n\n\tconstructor(props){\n\t\tsuper(props);\n\t}\n\n\tcardComponent = this.props.friendlist.map((user, i) => {\n\t\treturn <Card key={i} id={this.props.friendlist[i].id} name = {this.props.friendlist[i].name} imageURL={this.props.friendlist[i].imageurl} email={this.props.friendlist[i].email} msgDatabase={ this.props.friendlist[i].msgdata } loadChattingUser={ this.props.loadChattingUser } />\n\t})\n\t\nrender(){\n\treturn (\n\t\t<div>\n\t\t  \t{this.cardComponent}\n\t  \t</div>\t\n\t);\n}\n}\n\nexport default Cardlist;","import React from 'react';\n\nclass Mcard extends React.Component {\n\n\tconstructor(props){\n\t\tsuper(props);\n\t}\n\n\trender(){\n\treturn (\n\t\t<div>\n\t\t{\tthis.props.name === \"Ruke\"?\n\t\t<p className=\"f5 fr w-60 link br3 ph3 pv2 mb2 white bg-near-black\">\n\t\t\t{this.props.msg}\n\t\t</p>:\n\t\t<p className=\"f5 fl w-60 link br3 ph3 pv2 mb2 white bg-dark-green\">\n\t\t\t{this.props.msg}\n\t\t</p>\n\t\t\n\t\t\n\t\t}\n\t</div>\n\t);\n}\n}\n\nexport default Mcard;","import React from 'react';\nimport Mcard from './Mcard';\n\nclass Mcardlist extends React.Component {\n\n\tconstructor(props){\n\t\tsuper(props);\n\t}\n\n\tcardComponent = this.props.msges.map((user, i) => {\n\t\treturn <Mcard key={i} id={this.props.msges[i].id} name = {this.props.msges[i].name} msg={this.props.msges[i].msg} />\n\t})\n\t\nrender(){\n\treturn (\n\t\t<div>\n\t\t  \t{this.cardComponent}\n\t  \t</div>\t\n\t);\n}\n}\n\nexport default Mcardlist;","import React from 'react';\nimport Scroll from '../Scroll/Scroll';\nimport Cardlist from '../Card/Cardlist';\nimport Mcardlist from '../MsgCard/Mcardlist';\n\n\nclass Contacts extends React.Component {\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tname: this.props.data.user.name,\n\t\t\timageURL: 'http://mrmrs.github.io/photos/p/3.jpg',\n\t\t\tfriendslist: this.props.data.friendslist,\n\t\t\tfriend: {\n\t\t\t\tname: '',\n\t\t\t\timageURL: '',\n\t\t\t\tstatus: '',\n\t\t\t\tmsgDatabase: ''\n\t\t\t},\n\t\t\tmsgingChat: [],\n\t\t\tmsg:''\n\t\t}\n\t}\n\n\n\tloadChattingUser = (loadingData) => {\n\n\t\tthis.setState({ 'msgingChat': [] }, () => {console.log(\"CheckPoint1\");});\n\t\t\n\t\tthis.setState({friend: {\n        'name': loadingData.name,\n        'imageURL': loadingData.imageURL,\n        'email':loadingData.email,\n        'msgDatabase': loadingData.msgDatabase\n    }}, () => {console.log(\"CheckPoint2\");})\n\n\t\tvar database=loadingData.msgDatabase;\n\t\t\n\t\tfetch('http://localhost:3000/msges',{\n\t\t\tmethod: 'post',\n\t\t\theaders: {'Content-Type':'application/json'},\n\t\t\tbody:JSON.stringify({\n\t\t\t\tdatabase:  database\n\t\t\t})\n\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => {\n\t\t\t\tif(data.length !== 0){\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tmsgingChat:data\n\t\t\t\t\t}, () => {console.log(\"CheckPoint3\");})\n\t\t\t\t}\n\t\t\t})\n\t}\n\n\tonInputChange = (event) => {\n    this.setState({ msg:event.target.value });\n  \t}\n\n\tupdateMsgingChat = () => {\n\t\t// this.setState({ 'msgingChat': [] });\n\t\tfetch('http://localhost:3000/newmsges',{\n\t\t\tmethod: 'post',\n\t\t\theaders: {'Content-Type':'application/json'},\n\t\t\tbody:JSON.stringify({\n\t\t\t\tdatabase:  this.state.msgDatabase,\n\t\t\t\tname: this.state.name,\n\t\t\t\tmsg: this.state.msg\n\t\t\t})\n\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => {\n\t\t\t\tif(data.length !== 0){\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tmsgingChat:data}, () => {\n\t\t\t\t\t\t  alert(\"updating state\");\n\t\t\t\t\t\t  console.log(this.state.msgingChat[this.state.msgingChat.length-1]);\n\t\t\t\t\t\t  this.forceUpdate();\n\t\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t\talert(\"Running func updateMsgingChat\");\n\t\t\t\n\t\t\t// this.setState(this.state); \n\t}\n\n\trender(){\n\t\talert(\"Rendering\");\n\t\tconst { onRouteChange } = this.props;\n\treturn(\n\n\t\t<div  className=\"dt w-100 h-100\">\n\n\n\t\t\t<div className=\"dtc w-30 vh-100 ba b--black-20 center pa1 bg-light-yellow\">\n\t\t\t\t<nav className=\"dt w-100 border-box bg-near-black ph3 pv2 ph3-ns\">\n\t\t\t\t  <div className=\"dtc v-mid mid-gray  w-25\">\n\t\t\t\t    <img src={this.state.imageURL} className=\"dib w3 v-mid h3 br-100\" alt=\"Site Name\" />\n\t\t\t\t    <p className=\"f6 moon-gray v-mid pl4 tr f4-ns dib \" >{this.state.name}</p>\n\t\t\t\t    <div className=\"hide-child dib tr v-mid f3 moon-gray pa2\">:\n\t\t\t\t\t    <div className=\"child absolute bg-near-black\">\n\t\t\t\t\t        <div className=\"tl pa2 pointer\"> Profile</div>\n\t\t\t\t\t        <div className=\"tl pa2 pointer\"> New Group </div>\n\t\t\t\t\t        <div className=\"tl pa2 pointer\"> Archieved </div>\n\t\t\t\t\t        <div className=\"tl pa2 pointer\"> Starred </div>\n\t\t\t\t\t        <div className=\"tl pa2 pointer\"> Saved </div>\n\t\t\t\t\t        <div className=\"tl pa2 pointer\" onClick={() => onRouteChange('signin')} > Log out </div>\n\t\t\t\t\t    </div>\n\t\t\t\t  </div>\n\t\t\t\t  </div>\n\t\t\t\t</nav>\n\n\t\t\t\t<input id=\"name\" className=\"input-reset ba b--black-20 pa2 mv2 db w-100 bg-near-white\" type=\"text\" placeholder='Search' />\n\t\t\t    \n\t\t\t    <Scroll>\n\t\t\t\t    <div>\n\t\t\t\t\t    <Cardlist friendlist={ this.state.friendslist } loadChattingUser={ this.loadChattingUser } />\n\t\t\t\t    </div>\n\t\t\t    </Scroll>\n\t\t\t</div>\n\n\n\t\t\t<div className=\"dtc w6-ns pa1 ba b--black-20 bg-light-silver vh-100\" >\n\t\t\t\t{this.state.msgingChat.length === 0?\n\t\t\t\t<div className=\"tc f4\">\n\t\t\t\t\t<h1 className=\"\">....................................................................</h1>\n\t\t\t\t\t<h1 className=\"pv5 ph4 f-headline lh-solid\" style={{ fontFamily: 'Barriecito' }}>WELCOME TO CHATTER, {this.state.name}</h1>\n\t\t\t\t\t<h1 className=\"\">....................................................................</h1>\n\t\t\t\t</div>:\n\t\t\t\t<div>\n\n\t\t         \t<div className=\"dt v-top w-100 border-box bg-near-black ph5 pv2 ph4-ns\">\n\t\t\t\t\t  <div className=\"dtc v-mid mid-gray  w-40\" >\n\t\t\t\t\t    <img src={ this.state.friend.imageURL } className=\"dib w3 v-mid h3 br-100\" alt=\"Site Name\" />\n\t\t\t\t\t    <p className=\"f6 moon-gray v-mid pl4 f4-ns dib \" >{ this.state.friend.name }</p>\n\t\t\t\t\t  </div>\n\t\t\t\t\t  <div className=\"dtc v-mid w-60 tr\">\n\t\t\t\t\t    <div className=\"link dim f6 moon-gray f4-ns dib mr3 mr4-ns\" title=\"About\">Services</div>\n\t\t\t\t\t    <div className=\"link dim f6 moon-gray f4-ns dib mr3 mr4-ns\" title=\"Store\">Blog</div>\n\t\t\t\t\t    <div className=\"link dim f6 moon-gray f4-ns dib\" title=\"Contact\">Join Us</div>\n\t\t\t\t\t  </div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<Scroll className=\"bg-washed-yellow\">\n\t\t\t\t\t\t<div className=\"w-100 border-box bg-washed-yellow ph5 pv2 ph4-ns mv1 db\" style={{height: '710px', fontFamily: 'Bree Serif' }} >\n\t\t\t\t\t\t\t<Mcardlist msges={ this.state.msgingChat } updateMsgingChat = { this.updateMsgingChat } />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Scroll>\n\n\t\t\t\t\t<div className=\"dt w-100 border-box bg-black ph5 pv2 ph4-ns\">\n\t\t\t\t\t\t<input placeholder=\"Type a message\" type=\"text\" onChange={ this.onInputChange } className=\"mw-100 w-80 f5 input-reset ba b--black-20 pv3 ph4 border-box\" />\n\t      \t\t\t\t<input type=\"submit\" value=\"Send\" onClick={ this.updateMsgingChat } className=\"input-reset w-20 bg-dark-green white f5 pv2 pv3-ns ph4 ba b--black-80 bg-hover-mid-gray\" />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t}\n\t        </div>\n\n\t    </div>\n\t\t);\n\t}\n}\n\nexport default Contacts;","import React from 'react';\n\nclass Register extends React.Component {\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\temail: '',\n\t\t\tpassword: '',\n\t\t\tname: ''\n\t\t}\n\t}\n\n\tonNameChange = (event) => {\n\t\tthis.setState({ name: event.target.value });\n\t}\n\n\tonEmailChange = (event) => {\n\t\tthis.setState({ email: event.target.value });\n\t}\n\n\tonPasswordChange = (event) => {\n\t\tthis.setState({ password: event.target.value });\n\t}\n\n\tonSubmitSignIn = () => {\n\t\tfetch('http://localhost:3000/register',{\n\t\t\tmethod: 'post',\n\t\t\theaders: {'Content-Type':'application/json'},\n\t\t\tbody:JSON.stringify({\n\t\t\t\tname: this.state.name,\n\t\t\t\temail: this.state.email,\n\t\t\t\tpassword: this.state.password\n\t\t\t})\n\t\t})\n\n\t\t\tthis.props.onRouteChange('home');\n\t}\n\n\trender(){\n\t\tconst { onRouteChange } = this.props;\n\treturn(\n\t\t\t<div className=\"sans-serif w-100 white mw6 center relative cover bg-top mt2\" style={{backgroundImage: `url(https://www.photocollage.com/pics/logo-en.png)`}}>\n\t\t      <div id=\"overlay\" className=\"absolute absolute--fill bg-navy o-70 z-unset\"></div>\n\n\t\t      <div className=\"relative pa4 pa5-m\">\n\t\t        <h1 className=\"serif tracked ma0 mb4 pv3\">Register</h1>\n\t\t        <div>\n\t\t          <div className=\"mb3\">\n\t\t            <label htmlFor=\"username\" className=\"db f6 white-80 ttu ph2 mb2\">Username</label>\n\t\t            <input type=\"text\" name=\"username\" onChange={ this.onNameChange } className=\"input-reset db w-100 mw-100 white b pv2 ph3 bg-white-30 hover-bg-white-70 hover-gray outline-0 bn br-pill\" />\n\t\t          </div>\n\t\t          <div className=\"mb3\">\n\t\t            <label htmlFor=\"username\" className=\"db f6 white-80 ttu ph2 mb2\">E-mail</label>\n\t\t            <input type=\"email\" name=\"email\" onChange={ this.onEmailChange } className=\"input-reset db w-100 mw-100 white b pv2 ph3 bg-white-30 hover-bg-white-70 hover-gray outline-0 bn br-pill\" />\n\t\t          </div>\n\t\t          <div className=\"mb4\">\n\t\t            <label htmlFor=\"password\" className=\"db f6 white-80 ttu ph2 mb2\">Password</label>\n\t\t            <input type=\"password\" name=\"password\" onChange={ this.onPasswordChange } className=\"input-reset db w-100 mw-100 white b pv2 ph3 bg-white-30 hover-bg-white-70 hover-gray outline-0 bn br-pill\" />\n\t\t          </div>\n\t\t          <div>\n\t\t            <input className=\"input-reset db w-100 light-gray f6 b ttu tracked pv3 ph3 pointer bg-dark-blue hover-bg-blue bn br-pill\"\n\t\t             type=\"submit\" \n\t\t\t\t     value=\"Register\"\n\t\t\t\t     onClick={ this.onSubmitSignIn } />\n\t\t          </div>\n\t\t        </div>\n\t\t        \n\t\t        <div className=\"tc b f6 mt4 o-70 glow pa2 i\">\n\t\t           Already Registered ? <p className=\"white pointer\"  onClick={() => onRouteChange('signin')}>Sign In</p>\n\t\t        </div>\n\t\t      </div>\n\t\t    </div>\n    \n\t\t);\n\t}\n}\n\nexport default Register;","import React from 'react';\n\nclass Signin extends React.Component {\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tsignInEmail: '',\n\t\t\tsignInPassword: ''\n\t\t}\n\t}\n\n\tonEmailChange = (event) => {\n\t\tthis.setState({ signInEmail: event.target.value })\n\t}\n\n\tonPasswordChange = (event) => {\n\t\tthis.setState({ signInPassword: event.target.value })\n\t}\n\n\tonSubmitSignIn = () => {\n\t\tfetch('http://localhost:3000/signin',{\n\t\t\tmethod: 'post',\n\t\t\theaders: {'Content-Type':'application/json'},\n\t\t\tbody:JSON.stringify({\n\t\t\t\temail: this.state.signInEmail,\n\t\t\t\tpassword: this.state.signInPassword\n\t\t\t})\n\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => {\n\t\t\t\tif(data.id){\n\n\t\t\t\t\tfetch('http://localhost:3000/contacts',{\n\t\t\t\t\t\tmethod: 'post',\n\t\t\t\t\t\theaders: {'Content-Type':'application/json'}\n\t\t\t\t\t})\n\t\t\t\t\t\t.then(result => result.json())\n\t\t\t\t\t\t.then(friends => {\n\t\t\t\t\t\t\tif(friends.length !== 0){\n\t\t\t\t\t\t\t\tthis.props.loadUser(data, friends);\n\t\t\t\t\t\t\t\tthis.props.onRouteChange('home');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t}\n\n\n\trender(){\n\t\tconst { onRouteChange } = this.props;\n\treturn(\n\t\t\t<div className=\"sans-serif w-100 white mw6 center relative cover bg-top mt2\" style={{backgroundImage: `url(https://www.photocollage.com/pics/logo-en.png)`}}>\n\t\t      <div id=\"overlay\" className=\"absolute absolute--fill bg-navy o-70 z-unset\"></div>\n\n\t\t      <div className=\"relative pa4 pa5-m\">\n\t\t        <h1 className=\"serif tracked ma0 mb4 pv3\">Sign In</h1>\n\t\t        <div>\n\t\t          <div className=\"mb3\">\n\t\t            <label htmlFor=\"username\" className=\"db f6 white-80 ttu ph2 mb2\">Email</label>\n\t\t            <input type=\"email\" name=\"username\" onChange={ this.onEmailChange } className=\"input-reset db w-100 mw-100 white b pv2 ph3 bg-white-30 hover-bg-white-70 hover-gray outline-0 bn br-pill\" />\n\t\t          </div>\n\t\t          <div className=\"mb4\">\n\t\t            <label htmlFor=\"password\" className=\"db f6 white-80 ttu ph2 mb2\">Password</label>\n\t\t            <input type=\"password\" name=\"password\" onChange={ this.onPasswordChange } className=\"input-reset db w-100 mw-100 white b pv2 ph3 bg-white-30 hover-bg-white-70 hover-gray outline-0 bn br-pill\" />\n\t\t          </div>\n\t\t          <div>\n\t\t            <input className=\"input-reset db w-100 light-gray f6 b ttu tracked pv3 ph3 pointer bg-dark-blue hover-bg-blue bn br-pill\" \n\t\t            value=\"Sign In\" \n\t\t            onClick={ this.onSubmitSignIn }\n\t\t            type=\"submit\" />\n\t\t          </div>\n\t\t        </div>\n\t\t        \n\t\t        <div className=\"tc b f6 mt4 o-70 glow pa2 i\">\n\t\t          New Member? <p className=\"white pointer\" onClick={() => onRouteChange('register')}>Register here</p>\n\t\t        </div>\n\t\t      </div>\n\t\t    </div>\n    \n\t\t);\n\t}\n}\n\nexport default Signin;","import React, { Component } from 'react';\nimport './App.css';\nimport Contacts from './Components/Contacts/Contacts';\nimport Register from './Components/Register/Register';\nimport Signin from './Components/Signin/Signin';\n\n\nconst initialState = {\n      route: 'signin',\n      user: {\n        'id': '',\n        'name':'',\n        'email':'',\n        'password':'',\n        'joined': ''\n      },\n      friendslist: []\n    }\n\n\nclass App extends Component {\n\n  constructor(){\n    super();\n    this.state = initialState;\n  }\n\n   loadUser = (data, friends) => {\n    // this.setState(initialState);\n    this.setState({\n      user: {\n        'id': data.id,\n        'name':data.name,\n        'email':data.email,\n        'password': data.password,\n        'joined': data.joined\n    },\n      friendslist: friends\n  })\n  }\n\n  onRouteChange = (route) => {\n    if(route === 'signout'){\n      this.setState(initialState);\n    }\n    this.setState({route: route});\n  }\n\n  render(){\n  return (\n    <div className=\"App\">\n        {this.state.route === 'signin'?\n          <Signin loadUser = { this.loadUser } onRouteChange = { this.onRouteChange }  />:\n          ( this.state.route === 'register'?\n            <Register loadUser = { this.loadUser } onRouteChange = { this.onRouteChange }   />:\n            <Contacts data = { this.state } onRouteChange = { this.onRouteChange } />\n          )\n        }\n    </div>\n  );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}